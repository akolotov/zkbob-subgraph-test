version: '3'
services:
  anvil:
    image: ghcr.io/foundry-rs/foundry:nightly
    working_dir: /anvil
    entrypoint: anvil --host 0.0.0.0 --accounts 2 --block-time 2 --silent
    ports:
      - '8545:8545'
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
  graph-node:
    image: graphprotocol/graph-node
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
      - anvil
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'local:archive:http://anvil:8545'
      #node_role: query-node
      ETHEREUM_POLLING_INTERVAL: 2000
      #ETHEREUM_BLOCK_BATCH_SIZE: 1
      #GRAPH_ETHEREUM_BLOCK_INGESTOR_MAX_CONCURRENT_JSON_RPC_CALLS_FOR_TXN_RECEIPTS: 5
      #GRAPH_ETHEREUM_FETCH_TXN_RECEIPTS_IN_BATCHES: true
      RUST_LOG: info
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
  ipfs:
    image: ipfs/go-ipfs:v0.20.0
    ports:
      - '5001:5001'
    # volumes:
    #   - ./data/ipfs:/data/ipfs
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    # volumes:
    #   - ./data/postgres:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
